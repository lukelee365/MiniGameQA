{"version":3,"sources":["assets/Script/SleepMainScene/CatControl.js","assets/Script/SleepMainScene/CatDreamPopup.js","assets/Script/SleepMainScene/CatTeaser.js","assets/Script/SleepMainScene/CollectiveObjects.js","assets/Script/SleepMainScene/Dreams.js","assets/Script/SleepMainScene/FoodContainer.js","assets/Script/SleepMainScene/GlobalInfo.js","assets/Script/SleepMainScene/HideDreamBlocks.js","assets/Script/SleepMainScene/LevelManager.js","assets/Script/SleepMainScene/StartLevel.js","assets/Script/SleepMainScene/UISound.js"],"names":["CatState","globalData","require","LevelManager","cc","Enum","FRONT","AWAKEN","BACK","SLEEP","DOWN","MINIGAME","Class","extends","Component","properties","catCurrentState","default","type","catTeaser","Node","catMeow","AudioClip","timerForChangeCatState","checkCatchTeaser","miniGameStateCounter","miniGameState","levelManager","onLoad","this","catAnim","getComponent","Animation","catCatchAnimanimState","getAnimationState","catCatch2AnimanimState","start","generateRandomCatGesture","playCatVoiceAccordingToHappinessLevel","CatHappiness","node","Sprite","on","event","play","goToSleepState","scheduleOnce","goToMiniGameState","checkIsCatHappy","resetComboPoint","goToIdleState","imageSprite","catGesture","loader","loadRes","SpriteFrame","err","spriteFrame","happiness","audioEngine","stop","current","randValue","Math","floor","random","randValue2","checkCatchCatTeaser","y","setCurrentTime","changeGameStateToIdle","showMiniGameRewardSummary","addComboPoint","switchMiniGameCatAnimationState","ranTimer","speed","console","log","switchMiniGameState","posbility","randomNum","dreamSprite","blocksGridLayout","hiddenBlocks","Prefab","source","pieces","keyBlocks","unlockedBlocks","isUnlocked","hiddenDreamBlocks","count","i","j","childNode","instantiate","x","width","height","parent","nodeControl","index","loadData","updateDreamBoXDescription","imgPath","CollectedDream","length","active","unlockHideBlocks","isKey","collectedDreamsArrarolder","ActionPoints","updateActionPoint","push","keyPieceIndex","indexOf","splice","isUnLocked","saveGolbalData","catchedTimes","canPulledOut","isCatched","value","canvas","levelManagerControl","collectObjects","imgNode","imgMask","catDreamPopup","dreamPopUpControl","openCatDreamPopup","bowlType","bowlState","director","getPhysicsManager","enabled","module","exports","UserName","NicknName","AvatarURL","StoredBackedTime","StoredEatingTime","StoredDrinkingingTime","StoredPlayingTime","StoredWatchingTime","CatHappinessGoUp","GameState","CatDream","IDLE","GO_OUT","totalDream","cat","countDownTime","goOutUI","goOutBtn","sleepBtn","miniGameBtn","collectiveDreamBubble","collectiveObject","catDreamBoxUI","combosLabelNode","miniGameScorePopupUI","minGameRewardedActionPointLabel","Label","combosLabel","actionPointLabel","descriptionDreamBoxLabel","hiddenDream","catDreamBoxGridLayout","sunMoonWheel","currentState","tapArea","playerWaitingTime","catHappiness","userData","comboCount","catControl","loadGolbalData","timeCountDownLabel","string","generatedDream","updateTimeWheelAccordingToRealTime","schedule","tglobalData","changeGameStateToSleep","startCountDown","changeGameStateToGoOut","changeGameStateToMiniGame","generateRandomDream","onMIniGameFinished","autoCollectObjectsAndDream","bFindexisted","loadAllDreamsFromGolbalData","_this2","removeAllChildren","forEach","dream","catHiddenDreamCOntrol","rewardedActionPoint","countToNextPoint","hideGameRewardSummary","getComboCount","openCatDreamBoxUI","closeCatDreamBoxUI","closeDreamPopUp","data","Date","degree","getHours","getMinutes","rotation","timeLength","timestamp","parse","futureTimeStampCatBack","StoredTime","callback","now","getTime","durationForCatbackTimeStamp","hours","minutes","seconds","unschedule","gameStart","getUserInfo","UISounds","onBtnClicked"],"mappings":"ohBAAA,IAGAA,EAHAC,EAAAC,EAAA,cACAC,EAAAD,EAAA,gBAGAF,EAAAI,GAAAC,KAAA,CACEC,MAAA,EACAC,OAAA,EACAC,KAAA,EACAC,MAAA,EACAC,KAAA,EACAC,SAAA,IAIFP,GAAAQ,MAAA,CACIC,QAAAT,GAAAU,UAEAC,WAAA,CACIC,gBAAA,CACIC,QAAAjB,EAAAM,MACAY,KAAAlB,GAEJmB,UAAA,CACIF,QAAA,KACAC,KAAAd,GAAAgB,MAEJC,QAAA,CAAAjB,GAAAkB,WACAC,uBAAA,GACAC,kBAAA,EACAC,qBAAA,EACAC,cAAA,EACAC,aAAAxB,GAKHyB,OAAA,WACGC,KAAAC,QAAAD,KAAAE,aAAA3B,GAAA4B,WACAH,KAAAI,sBAAAJ,KAAAC,QAAAI,kBAAA,SACAL,KAAAM,uBAAAN,KAAAC,QAAAI,kBAAA,WAGJE,MAAA,WACIP,KAAAQ,2BACAR,KAAAS,sCAAArC,EAAAsC,cAIAV,KAAAW,KAAAT,aAAA3B,GAAAqC,QACAZ,KAAAW,KAAAE,GAAA,WAAA,SAAAC,GAEId,KAAAb,iBAAAhB,EAAAM,QAECuB,KAAAb,iBAAAhB,EAAAQ,KAEGqB,KAAAC,QAAAc,KAAA,YACHf,KAAAb,iBAAAhB,EAAAS,OACGoB,KAAAC,QAAAc,KAAA,aAIJf,KAAAb,iBAAAhB,EAAAW,UAAAkB,KAAAS,sCAAArC,EAAAsC,eAELV,OAGHgB,eAAA,WAEIhB,KAAAW,KAAAT,aAAA3B,GAAAqC,QACAZ,KAAAb,iBAAAhB,EAAAM,OAEIuB,KAAAC,QAAAc,KAAA,cACAf,KAAAiB,aAAA,WACIjB,KAAAC,QAAAc,KAAA,gBACH,IAGDf,KAAAC,QAAAc,KAAA,eAEJf,KAAAb,gBAAAhB,EAAAS,OAGJsC,kBAAA,WACIlB,KAAAb,gBAAAhB,EAAAW,SAEAkB,KAAAmB,mBACInB,KAAAC,QAAAc,KAAA,cAGJf,KAAAS,sCAAArC,EAAAsC,cAEAV,KAAAiB,aAAA,WACIjB,KAAAC,QAAAc,KAAA,UACH,GACDf,KAAAF,aAAAsB,mBAUJC,cAAA,WACIrB,KAAAS,sCAAArC,EAAAsC,cACAV,KAAAW,KAAAT,aAAA3B,GAAAqC,QACAZ,KAAAb,iBAAAhB,EAAAS,OACIoB,KAAAC,QAAAc,KAAA,eACAf,KAAAb,gBAAAhB,EAAAQ,KACAqB,KAAAmB,oBACInB,KAAAiB,aAAA,WACIjB,KAAAC,QAAAc,KAAA,eACH,GACDf,KAAAb,gBAAAhB,EAAAM,QAIJuB,KAAAQ,4BAIRW,gBAAA,WACI,OAAA,GAAA/C,EAAAsC,cAMJF,yBAAA,WACI,IAAAc,EAAAtB,KAAAW,KAAAT,aAAA3B,GAAAqC,QACAW,EAAA,EASA,OARAvB,KAAAmB,mBACInB,KAAAb,gBAAAhB,EAAAM,MACA8C,EAAA,IAEAvB,KAAAb,gBAAAhB,EAAAQ,KACA4C,EAAA,GAGJA,GACI,KAAA,EACIhD,GAAAiD,OAAAC,QAAA,iBAAAlD,GAAAmD,YAAA,SAAAC,EAAAC,GACIN,EAAAM,YAAAA,IAEJ,MAEJ,KAAA,EACIrD,GAAAiD,OAAAC,QAAA,uBAAAlD,GAAAmD,YAAA,SAAAC,EAAAC,GACIN,EAAAM,YAAAA,IAEJ,MAEJ,KAAA,EACQrD,GAAAiD,OAAAC,QAAA,uBAAAlD,GAAAmD,YAAA,SAAAC,EAAAC,GACIN,EAAAM,YAAAA,IAEJ,MAER,KAAA,EACQrD,GAAAiD,OAAAC,QAAA,qBAAAlD,GAAAmD,YAAA,SAAAC,EAAAC,GACIN,EAAAM,YAAAA,MAQpBnB,sCAAA,SAAAoB,GAGI,GAFAtD,GAAAuD,YAAAC,KAAA/B,KAAAgC,SAEA,GAAAH,EAAA,CAEI,GAAA,IADAI,EAAAC,KAAAC,MAAA,EAAAD,KAAAE,WACA,CACI,IAAAC,EAAAH,KAAAC,MAAA,EAAAD,KAAAE,UAAA,EACApC,KAAAgC,QAAAzD,GAAAuD,YAAAf,KAAAf,KAAAR,QAAA6C,IAAA,EAAA,QAGArC,KAAAgC,QAAAzD,GAAAuD,YAAAf,KAAAf,KAAAR,QAAA,KAAA,EAAA,OAEP,CAEG,IAAAyC,EAAAC,KAAAC,MAAA,EAAAD,KAAAE,UACApC,KAAAgC,QAAAzD,GAAAuD,YAAAf,KAAAf,KAAAR,QAAAyC,IAAA,EAAA,KAKRK,oBAAA,YACI,KAAAtC,KAAAV,UAAAiD,GAAAvC,KAAAV,UAAAiD,IAAA,KAEIvC,KAAAL,kBAAA,EAEAK,KAAAC,QAAA8B,KAAA,SACA/B,KAAAC,QAAA8B,KAAA,UACA/B,KAAAC,QAAAuC,eAAA,EAAA,UACAxC,KAAAC,QAAAuC,eAAA,EAAA,SACAxC,KAAAF,aAAA2C,wBACAzC,KAAAF,aAAA4C,4BACA1C,KAAAF,aAAAsB,mBAGApB,KAAAF,aAAA6C,iBAKRC,gCAAA,WACI,GAAA5C,KAAAb,iBAAAhB,EAAAW,SAAA,CACI,GAAA,GAAAkB,KAAAH,cAAA,CAEI,IAAAgD,EAAA,EAAAX,KAAAE,SAAA,EACApC,KAAAiB,aAAA,WACIjB,KAAAI,sBAAA0C,MAAA,GACA9C,KAAAC,QAAAc,KAAA,UACH8B,GACDE,QAAAC,IAAA,kBACH,GAAA,GAAAhD,KAAAH,cAAA,CACGgD,EAAA,EAAAX,KAAAE,SAAA,EACApC,KAAAI,sBAAA0C,MAAA,EACA9C,KAAAiB,aAAA,WACIjB,KAAAC,QAAAc,KAAA,UACH8B,GACDE,QAAAC,IAAA,kBACH,GAAA,GAAAhD,KAAAH,cAAA,CACGgD,EAAA,IAAAX,KAAAE,SAAA,GACApC,KAAAM,uBAAAwC,MAAA,EACA9C,KAAAiB,aAAA,WACIjB,KAAAC,QAAAc,KAAA,WACH8B,GACDE,QAAAC,IAAA,kBACH,GAAA,GAAAhD,KAAAH,cAAA,CACGgD,EAAA,EAAAX,KAAAE,SAAA,EACApC,KAAAM,uBAAAwC,MAAA,IACA9C,KAAAiB,aAAA,WACIjB,KAAAC,QAAAc,KAAA,WACH8B,GACDE,QAAAC,IAAA,aAEJhD,KAAAJ,yBAKRqD,oBAAA,WACI,GAAA,GAAAjD,KAAAH,eACI,GAAA,IAAAG,KAAAJ,qBAAA,CACI,IAAAsD,GAAAlD,KAAAJ,qBAAA,IAAA,GACA,GAAAsC,KAAAE,UAAAc,EAAA,CAGA,IAAAC,EAAAjB,KAAAE,SAEIpC,KAAAH,cADJsD,GAAA,GACI,EACH,IAAAA,EAEG,EACH,EAGDnD,KAAAJ,qBAAA,SAGP,GAAA,GAAAI,KAAAH,eACG,GAAA,GAAAG,KAAAJ,qBAAA,CACIsD,GAAAlD,KAAAJ,qBAAA,GAAA,EACA,GAAAsC,KAAAE,UAAAc,EAAA,CAGAC,EAAAjB,KAAAE,SAEIpC,KAAAH,cADJsD,GAAA,GACI,EACH,IAAAA,EAEG,EACH,EAGDnD,KAAAJ,qBAAA,SAGP,GAAA,GAAAI,KAAAH,eACG,GAAA,GAAAG,KAAAJ,qBAAA,CACIsD,GAAAlD,KAAAJ,qBAAA,GAAA,EACA,GAAAsC,KAAAE,UAAAc,EAAA,CAGAC,EAAAjB,KAAAE,SAEIpC,KAAAH,cADJsD,GAAA,GACI,EACH,IAAAA,EAEG,EACH,EAGDnD,KAAAJ,qBAAA,SAGP,GAAAI,KAAAH,gBACGG,KAAAH,cAAA,EACAG,KAAAJ,qBAAA,GAEJI,KAAA4C,+MCvSR,IAAAxE,EAAAC,EAAA,cACAC,EAAAD,EAAA,gBACAE,GAAAQ,MAAA,CACIC,QAAAT,GAAAU,UAEAC,WAAA,CACIkE,YAAA,CACIhE,QAAA,KACAC,KAAAd,GAAAgB,MAEJO,aAAAxB,EACA+E,iBAAA,CACIjE,QAAA,KACAC,KAAAd,GAAAgB,MAGJ+D,aAAA,CACIlE,QAAA,KACAC,KAAAd,GAAAgF,QAEJC,OAAA,GACAC,OAAA,GACAC,UAAA,GACAC,eAAA,GACAC,YAAA,EACAC,kBAAA,CAAAtF,GAAAgB,OAKHQ,OAAA,WAEG,IADA,IAAA+D,EAAA,EACAC,EAAA,EAAAA,EAAA,EAAAA,IACI,IAAA,IAAAC,EAAA,EAAAA,EAAA,EAAAA,IAAA,CACI,IAAAC,EAAA1F,GAAA2F,YAAAlE,KAAAsD,cACAW,EAAAE,EAAAF,EAAAG,MAAAL,EACAE,EAAA1B,EAAA,KAAA0B,EAAAI,OAAAL,EACAC,EAAAK,OAAAtE,KAAAqD,iBACA,IAAAkB,EAAAN,EAAA/D,aAAA,mBACAqE,EAAAD,OAAAtE,KAAAW,KACA4D,EAAAC,MAAAV,EACA9D,KAAA6D,kBAAAC,GAAAG,EACAH,MAKZvD,MAAA,aAKAkE,SAAA,SAAAjB,GAEIxD,KAAAF,aAAA4E,0BAAA,YACA,IAAApD,EAAAtB,KAAAoD,YAAAlD,aAAA3B,GAAAqC,QACA+D,EAAA,SAAAnB,EACAxD,KAAAwD,OAAAA,EACAjF,GAAAiD,OAAAC,QAAAkD,EAAApG,GAAAmD,YAAA,SAAAC,EAAAC,GACIN,EAAAM,YAAAA,IAGJxD,EAAAwG,eACA,IADA,IACAJ,EAAA,EAAAA,EAAApG,EAAAwG,eAAAC,OAAAL,IACIpG,EAAAwG,eAAAJ,GAAAhB,QAAAxD,KAAAwD,SACIxD,KAAA2D,eAAAvF,EAAAwG,eAAAJ,GAAAb,gBAIR,IAAAa,EAAA,EAAAA,EAAAxE,KAAA6D,kBAAAgB,OAAAL,IACIxE,KAAA6D,kBAAAW,GAAAM,QAAA,EAGJ,IAAA,IAAAd,EAAA,EAAAA,EAAAhE,KAAA2D,eAAAkB,OAAAb,IACIhE,KAAA6D,kBAAA7D,KAAA2D,eAAAK,IAAAc,QAAA,GAKRC,iBAAA,SAAAP,EAAAQ,GAEI,IAAAC,EAAA7G,EAAAwG,eAEA,GADA7B,QAAAC,IAAA,YAAA5E,EAAA8G,cACA,EAAA9G,EAAA8G,aAAA,CAEI9G,EAAA8G,eAEAlF,KAAAF,aAAAqF,oBACAnF,KAAA6D,kBAAAW,GAAAM,QAAA,EACA,IAAA,IAAAf,EAAA,EAAAA,EAAAkB,EAAAJ,OAAAd,IACI,GAAAkB,EAAAlB,GAAAP,QAAAxD,KAAAwD,OAAA,CAGIpF,EAAAwG,eAAAb,GAAAJ,eAAAyB,KAAAZ,GAEA,IAAAa,EAAAJ,EAAAlB,GAAAL,UAAA4B,QAAAd,GAOA,IALA,EAAAa,GAEIjH,EAAAwG,eAAAb,GAAAL,UAAA6B,OAAAF,EAAA,GAGJjH,EAAAwG,eAAAb,GAAAL,UAAAmB,QAAA,EAAA,CAEIzG,EAAAwG,eAAAb,GAAAyB,YAAA,EACA,IAAA,IAAAxB,EAAA,EAAAA,EAAAhE,KAAA6D,kBAAAgB,OAAAb,IACI5F,EAAAwG,eAAAb,GAAAJ,eAAAyB,KAAApB,GACAhE,KAAA6D,kBAAAG,GAAAc,QAAA,EAEJ9E,KAAAF,aAAA4E,0BAAA,gBACHtG,EAAAwG,eAAAb,GAAAJ,eAAAkB,QAAAzG,EAAAwG,eAAAb,GAAAN,SACGrF,EAAAwG,eAAAb,GAAAyB,YAAA,EACAxF,KAAAF,aAAA4E,0BAAA,kBAKZ3B,QAAAC,IAAA,qBAEJhD,KAAAF,aAAA2F,sLCtHRlH,GAAAQ,MAAA,CACIC,QAAAT,GAAAU,UAEAC,WAAA,CACII,UAAA,CACIF,QAAA,KACAC,KAAAd,GAAAgB,MAEJmG,aAAA,EACAC,cAAA,EACAC,WAAA,GAOJrF,MAAA,WACIP,KAAAC,QAAAD,KAAAV,UAAAY,aAAA3B,GAAA4B,WAEAH,KAAAW,KAAAE,GAAA,WAAA,SAAAC,GAEGd,KAAA4F,UAKK5F,KAAA2F,cACI3F,KAAAC,QAAAc,KAAA,YALRf,KAAAC,QAAAc,KAAA,WAWLf,wIClCPzB,GAAAQ,MAAA,CACIC,QAAAT,GAAAU,UAEAC,WAAA,CACI2G,MAAA,EACAC,OAAA,CACI1G,QAAA,KACAC,KAAAd,GAAAgB,OAMRQ,OAAA,WACIC,KAAA+F,oBAAA/F,KAAA8F,OAAA5F,aAAA,iBAGJK,MAAA,WACIP,KAAAW,KAAAE,GAAA,WAAA,SAAAC,GACId,KAAA+F,oBAAAC,eAAAhG,KAAA6F,OACA7F,KAAAW,KAAAmE,QAAA,GACH9E,kHCrBTzB,GAAAQ,MAAA,CACIC,QAAAT,GAAAU,UAEAC,WAAA,CACIsE,OAAA,UACAC,OAAA,EACAC,UAAA,GACAC,eAAA,GACAC,YAAA,EACAqC,QAAA,CACI7G,QAAA,KACAC,KAAAd,GAAAgB,MAEJ2G,QAAA,CACI9G,QAAA,KACAC,KAAAd,GAAAgB,MAEJ4G,cAAA,CACI/G,QAAA,KACAC,KAAAd,GAAAgB,OAQRgB,MAAA,WACIP,KAAA2E,QAAA,SAAA3E,KAAAwD,OACAT,QAAAC,IAAA,QAAAhD,KAAA2E,QAAA,gBAAA3E,KAAA4D,YACA5D,KAAAkG,QAAApB,QAAA9E,KAAA4D,WACA,IAAAtC,EAAAtB,KAAAiG,QAAA/F,aAAA3B,GAAAqC,QACAZ,KAAAoG,kBAAApG,KAAAmG,cAAAjG,aAAA,iBACA3B,GAAAiD,OAAAC,QAAAzB,KAAA2E,QAAApG,GAAAmD,YAAA,SAAAC,EAAAC,GACIN,EAAAM,YAAAA,IAEJ5B,KAAAW,KAAAE,GAAA,WAAA,SAAAC,GACId,KAAAqG,qBACHrG,OAGLqG,kBAAA,WACIrG,KAAAmG,cAAArB,QAAA,EACA9E,KAAAoG,kBAAA3B,SAAAzE,KAAAwD,kIC3CRjF,GAAAQ,MAAA,CACIC,QAAAT,GAAAU,UAEAC,WAAA,CACIoH,SAAA,EACAC,UAAA,GAeJhG,MAAA,WAEI,IACAe,EAAAtB,KAAAW,KAAAT,aAAA3B,GAAAqC,QAEAZ,KAAAW,KAAAE,GAAA,WAAA,SAAAC,GAEQ,GAAAd,KAAAuG,WACI,GAAAvG,KAAAsG,SACI/H,GAAAiD,OAAAC,QAAA,mCAAAlD,GAAAmD,YAAA,SAAAC,EAAAC,GACIN,EAAAM,YAAAA,IAEP,GAAA5B,KAAAsG,UAEG/H,GAAAiD,OAAAC,QAAA,oCAAAlD,GAAAmD,YAAA,SAAAC,EAAAC,GACIN,EAAAM,YAAAA,IAGR5B,KAAAuG,UAAA,GACH,GAAAvG,KAAAuG,YAEO,GAAAvG,KAAAsG,SACI/H,GAAAiD,OAAAC,QAAA,oCAAAlD,GAAAmD,YAAA,SAAAC,EAAAC,GACIN,EAAAM,YAAAA,IAEP,GAAA5B,KAAAsG,UAEG/H,GAAAiD,OAAAC,QAAA,qCAAAlD,GAAAmD,YAAA,SAAAC,EAAAC,GACIN,EAAAM,YAAAA,IAGZ5B,KAAAuG,UAAA,IAETvG,0HC9DXzB,GAAAiI,SAAAC,oBAAAC,SAAA,EAQAC,EAAAC,QAAA,CAEIC,SAAA,KACAC,UAAA,KACAC,UAAA,KACAC,iBAAA,EACAC,iBAAA,EACAC,sBAAA,EACAC,kBAAA,EACAC,mBAAA,EACAlC,aAAA,EACAxE,aAAA,EACA2G,kBAAA,EACAzC,eAAA,+HCZJrG,GAAAQ,MAAA,CACIC,QAAAT,GAAAU,UAEAC,WAAA,CACIsF,MAAA,EACAF,OAAA,CACIlF,QAAA,KACAC,KAAAd,GAAAgB,OAORgB,MAAA,WACIP,KAAAW,KAAAE,GAAA,WAAA,SAAAC,GAEA,GAAAd,KAAAW,KAAAmE,QACI9E,KAAAsE,OAAApE,aAAA,iBAAA6E,iBAAA/E,KAAAwE,MAAAxE,KAAAwE,QAGHxE,8HC/BT,IACAsH,EADAlJ,EAAAC,EAAA,cAWA,SAAAkJ,EAAA/D,EAAAC,EAAAC,EAAAC,EAAA6B,GACIxF,KAAAwD,OAAAA,EACAxD,KAAAyD,OAAAA,EACAzD,KAAA0D,UAAAA,EACA1D,KAAA2D,eAAAA,EACA3D,KAAAwF,WAAAA,EAdJ8B,EAAA/I,GAAAC,KAAA,CACEgJ,KAAA,EACAC,OAAA,EACA7I,MAAA,EACAE,SAAA,IAcF,IAUA4I,EAAA,CAVA,IAAAH,EAAA,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GACA,IAAAA,EAAA,SAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GACA,IAAAA,EAAA,WAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GACA,IAAAA,EAAA,UAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GACA,IAAAA,EAAA,WAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GACA,IAAAA,EAAA,SAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GACA,IAAAA,EAAA,MAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GACA,IAAAA,EAAA,WAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GACA,IAAAA,EAAA,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,GACA,IAAAA,EAAA,QAAA,GAAA,CAAA,EAAA,EAAA,EAAA,EAAA,GAAA,IAAA,IAGAhJ,GAAAQ,MAAA,CACIC,QAAAT,GAAAU,UAEAC,WAAA,CACIyI,IAAA,CACIvI,QAAA,KACAC,KAAAd,GAAAgB,MAEJqI,cAAA,CACIxI,QAAA,KACAC,KAAAd,GAAAgB,MAEJsI,QAAA,CACIzI,QAAA,KACAC,KAAAd,GAAAgB,MAEJuI,SAAA,CACI1I,QAAA,KACAC,KAAAd,GAAAgB,MAEJwI,SAAA,CACI3I,QAAA,KACAC,KAAAd,GAAAgB,MAEJyI,YAAA,CACI5I,QAAA,KACAC,KAAAd,GAAAgB,MAEJ0I,sBAAA,CACI7I,QAAA,KACAC,KAAAd,GAAAgB,MAEJ2I,iBAAA,CACI9I,QAAA,KACAC,KAAAd,GAAAgB,MAGJ4I,cAAA,CACI/I,QAAA,KACAC,KAAAd,GAAAgB,MAEJ6I,gBAAA,CACIhJ,QAAA,KACAC,KAAAd,GAAAgB,MAEJ8I,qBAAA,CACIjJ,QAAA,KACAC,KAAAd,GAAAgB,MAEJ+I,gCAAA,CACIlJ,QAAA,KACAC,KAAAd,GAAAgK,OAEJC,YAAA,CACIpJ,QAAA,KACAC,KAAAd,GAAAgK,OAEJE,iBAAA,CACIrJ,QAAA,KACAC,KAAAd,GAAAgK,OAEJG,yBAAA,CACItJ,QAAA,KACAC,KAAAd,GAAAgK,OAGJI,YAAA,CACIvJ,QAAA,KACAC,KAAAd,GAAAgF,QAEJqF,sBAAA,CACIxJ,QAAA,KACAC,KAAAd,GAAAgB,MAGJ4G,cAAA,CACI/G,QAAA,KACAC,KAAAd,GAAAgB,MAEJsJ,aAAA,CACIzJ,QAAA,KACAC,KAAAd,GAAAgB,MAGJuJ,aAAA,CACI1J,QAAAkI,EAAAE,KACAnI,KAAAiI,GAEJyB,QAAA,CACI3J,QAAA,KACAC,KAAAd,GAAAgB,MAEJD,UAAA,CACIF,QAAA,KACAC,KAAAd,GAAAgB,MAEJyJ,kBAAA,GAEAC,aAAA,EACAC,SAAA,KACAC,WAAA,GAKJpJ,OAAA,WAGIC,KAAAoJ,WAAApJ,KAAA2H,IAAAzH,aAAA,cAIAF,KAAAqJ,kBAGJ9I,MAAA,WACIP,KAAAsJ,mBAAAtJ,KAAA4H,cAAA1H,aAAA3B,GAAAgK,OACAvI,KAAA6H,QAAA/C,QAAA,EACA9E,KAAA4H,cAAA9C,QAAA,EACA9E,KAAAmG,cAAArB,QAAA,EACA9E,KAAAmI,cAAArD,QAAA,EACA9E,KAAAkI,iBAAApD,QAAA,EACA9E,KAAAiI,sBAAAnD,QAAA,EACA9E,KAAA+I,QAAAjE,QAAA,EACA9E,KAAAV,UAAAwF,QAAA,EACA9E,KAAAwI,YAAAe,OAAA,GACAvJ,KAAAoI,gBAAAtD,QAAA,EACA9E,KAAAqI,qBAAAvD,QAAA,EAEA9E,KAAAwJ,eAAA,KAEAxJ,KAAAyJ,qCACAzJ,KAAA0J,SAAA,WACI1J,KAAAyJ,sCACH,KAGDzJ,KAAA0J,SAAA,WACI,IAAAtL,EAAAsC,aACGtC,EAAAiJ,kBAAA,EACFsC,YAAAjJ,aAGDtC,EAAAiJ,iBACIjJ,EAAAsC,aAAA,IACItC,EAAAsC,eAIJ,EAAAtC,EAAAsC,cACItC,EAAAsC,gBAIX,OAIL+E,eAAA,WACI,GAQJ4D,eAAA,aAiCAO,uBAAA,WAMG,IAAA3H,EAAAC,KAAAC,MAAAD,KAAAE,UAAA,GAAAhE,EAAAsC,eACA,GAAAtC,EAAAsC,eACCuB,EAAA,IAED,GAAA7D,EAAAsC,cAAAuB,GAAA,GACCjC,KAAA8I,aAAAxB,EAAA1I,MACAoB,KAAA2H,IAAA7C,QAAA,EACA9E,KAAAoJ,WAAApI,iBACAhB,KAAA6J,eAAA,EAAA7J,KAAAgJ,qBAEA,EAAA5K,EAAAsC,cACItC,EAAAsC,eAEJqC,QAAAC,IAAA,mBAEDhD,KAAAoJ,WAAA3I,sCAAArC,EAAAsC,eAGHoJ,uBAAA,WAEI,IAAA7H,EAAAC,KAAAC,MAAAD,KAAAE,UAAA,GAAAhE,EAAAsC,eACA,GAAAtC,EAAAsC,eACIuB,EAAA,IAEJ,GAAA7D,EAAAsC,cAAAuB,GAAA,GACIjC,KAAA6H,QAAA/C,QAAA,EACA9E,KAAA8I,aAAAxB,EAAAG,OACAzH,KAAA2H,IAAA7C,QAAA,EACA9E,KAAA6J,eAAA7J,KAAAgJ,qBAGA,EAAA5K,EAAAsC,cACItC,EAAAsC,eAEJqC,QAAAC,IAAA,mBAEJhD,KAAAoJ,WAAA3I,sCAAArC,EAAAsC,eAGJqJ,0BAAA,WACI/J,KAAAgI,YAAAlD,QAAA,EACA9E,KAAA8H,SAAAhD,QAAA,EACA9E,KAAA+H,SAAAjD,QAAA,EACA9E,KAAA+I,QAAAjE,QAAA,EACA9E,KAAAV,UAAAwF,QAAA,EACA9E,KAAAwI,YAAAe,OAAA,GACAvJ,KAAAoI,gBAAAtD,QAAA,EACA9E,KAAA2H,IAAA7C,QAAA,EACA9E,KAAA8I,aAAAxB,EAAAxI,SACAkB,KAAAoJ,WAAAlI,qBAIJuB,sBAAA,WACIzC,KAAA8I,cAAAxB,EAAA1I,OACIoB,KAAAiI,sBAAAnD,QAAA,EACA9E,KAAAgK,uBACHhK,KAAA8I,cAAAxB,EAAAG,OACGzH,KAAAkI,iBAAApD,QAAA,EACH9E,KAAA8I,cAAAxB,EAAAxI,UACGkB,KAAAiK,qBAEJjK,KAAA8I,aAAAxB,EAAAE,KACAxH,KAAA2H,IAAA7C,QAAA,EACA9E,KAAA+I,QAAAjE,QAAA,EACA9E,KAAAV,UAAAwF,QAAA,EACA9E,KAAA4H,cAAA9C,QAAA,EACA9E,KAAA6H,QAAA/C,QAAA,EACA9E,KAAAwI,YAAAe,OAAA,GACAvJ,KAAAoI,gBAAAtD,QAAA,EACA9E,KAAAgI,YAAAlD,QAAA,EACA9E,KAAA8H,SAAAhD,QAAA,EACA9E,KAAA+H,SAAAjD,QAAA,EACA9E,KAAAoJ,WAAA/H,iBAIJ6I,2BAAA,WACIlK,KAAAiI,sBAAAnD,SACImD,sBAAAnD,QAAA,EACA9E,KAAAgG,eAAA,IAEJhG,KAAAkI,iBAAApD,SACIoD,iBAAApD,QAAA,EACA9E,KAAAgG,eAAA,KAKRgE,oBAAA,WAEChK,KAAAwJ,eAAA9B,EAAAxF,KAAAC,MAAAD,KAAAE,SAAAsF,EAAA7C,UAKDmB,eAAA,SAAA3G,GAEI,OAAAA,GACI,KAAA,EAII,IAHA,IAAA8K,GAAA,EACAlF,EAAA7G,EAAAwG,eAEAJ,EAAA,EAAAA,EAAAS,EAAAJ,OAAAL,IACIS,EAAAT,GAAAhB,QAAAxD,KAAAwJ,eAAAhG,SAEIpF,EAAA8G,cAAA,EACAiF,GAAA,GAIRA,GAAA/L,EAAAwG,eAAAQ,KAAApF,KAAAwJ,gBAGA,MACJ,KAAA,EAIA,QACIpL,EAAA8G,cAAA7F,EAGRW,KAAAyF,kBAGJ2E,4BAAA,WAAsC,IAAAC,EAAArK,KAElCA,KAAAyI,iBAAAc,OAAAnL,EAAA8G,aAEAlF,KAAA4I,sBAAA0B,oBAEAlM,EAAAwG,eAAA2F,QAAA,SAAAC,GAEA,IAAA7J,EAAApC,GAAA2F,YAAAmG,EAAA1B,aACA8B,EAAA9J,EAAAT,aAAA,UACAuK,EAAAjH,OAAAgH,EAAAhH,OACAiH,EAAAhH,OAAA+G,EAAA/G,OACAgH,EAAA/G,UAAA8G,EAAA9G,UACA+G,EAAA7G,WAAA4G,EAAAhF,WACAiF,EAAA9G,eAAA6G,EAAA7G,eAEA8G,EAAAtE,cAAAkE,EAAAlE,cACAxF,EAAA2D,OAAA+F,EAAAzB,wBAEA7F,QAAAC,IAAA,oBACAhD,KAAA0E,0BAAA,aAGJS,kBAAA,WACInF,KAAAyI,iBAAAc,OAAAnL,EAAA8G,aACAlF,KAAAyF,kBAIJ/C,0BAAA,WACI,IAAAgI,EAAAxI,KAAAC,MAAAnC,KAAAmJ,WAAA,IACAwB,EAAA,GAAA3K,KAAAmJ,WAAA,GACAnJ,KAAAqI,qBAAAvD,QAAA,EACA9E,KAAAsI,gCAAAiB,OAAA,gBAAAvJ,KAAAmJ,WAAA,aAAAuB,EAAA,uBAAAC,EAAA,iCACAvM,EAAA8G,cAAAwF,EACA1K,KAAAmF,qBAIJyF,sBAAA,WACI5K,KAAAqI,qBAAAvD,QAAA,GAGJJ,0BAAA,SAAAmB,GACI7F,KAAA0I,yBAAAa,OAAA1D,GAGJlD,cAAA,WACI3C,KAAAmJ,aACAnJ,KAAAwI,YAAAe,OAAA,UAAAvJ,KAAAmJ,YAGJ/H,gBAAA,WACIpB,KAAAmJ,WAAA,EACAnJ,KAAAwI,YAAAe,OAAA,UAAAvJ,KAAAmJ,YAGJ0B,cAAA,WACI,OAAA7K,KAAAmJ,YAGJ2B,kBAAA,WACI9K,KAAAoK,8BACApK,KAAAmI,cAAArD,QAAA,GAGJiG,mBAAA,WACI/K,KAAAmI,cAAArD,QAAA,GAGJkG,gBAAA,WACIhL,KAAAoK,8BACApK,KAAAmG,cAAArB,QAAA,GAGJmF,mBAAA,WAGQ7L,EAAAsC,gBAGR+I,mCAAA,WACI,IAAAwB,EAAA,IAAAC,KAEAC,EAAA,KADAF,EAAAG,WAAAH,EAAAI,aAAA,IAEArL,KAAA6I,aAAAyC,SAAAH,GAIJtB,eAAA,SAAA0B,GACIvL,KAAA4H,cAAA9C,QAAA,EACA9E,KAAA8H,SAAAhD,QAAA,EACA9E,KAAA+H,SAAAjD,QAAA,EACA9E,KAAAgI,YAAAlD,QAAA,EACA9E,KAAA+I,QAAAjE,QAAA,EACA9E,KAAAV,UAAAwF,QAAA,EACA9E,KAAAwI,YAAAe,OAAA,GACAvJ,KAAAoI,gBAAAtD,QAAA,EAEA,IAAA0G,EAAAN,KAAAO,MAAA,IAAAP,MACAnI,QAAAC,IAAA,QAAAwI,GAGA,IACAE,EADA,KAFAF,GAAA,KAGA,GAAAD,EAAA,IACAnN,EAAAuN,WAAAD,EACA1L,KAAA4L,SAAA,WAEI,IAAAC,GAAA,IAAAX,MAAAY,UACAC,EAAAL,EAAAG,EACAG,EAAA9J,KAAAC,MAAA4J,EAAA,MACAE,EAAA/J,KAAAC,MAAA4J,EAAA,KAAA,KACAG,EAAAhK,KAAAC,MAAA4J,EAAA,IAAA,KACA/L,KAAAsJ,mBAAAC,OAAAyC,EAAA,KAAAC,EAAA,IAAAC,EAAA,IAEAH,GAAA,MAGI/L,KAAAyC,wBACAzC,KAAAmM,WAAAnM,KAAA4L,YAGR5L,KAAA0J,SAAA1J,KAAA4L,SAAA,8ICteRvN,EAAA,cAEAE,GAAAQ,MAAA,CACIC,QAAAT,GAAAU,UAEAC,WAAA,GAsBAqB,MAAA,aAIA6L,UAAA,WACIpM,KAAAqM,eAIJA,YAAA,WACI,uIC3BR9N,GAAAQ,MAAA,CACIC,QAAAT,GAAAU,UAEAC,WAAA,CACIoN,SAAA,CAAA/N,GAAAkB,YAOJc,MAAA,aAIAgM,aAAA,WACIvM,KAAAgC,QAAAzD,GAAAuD,YAAAf,KAAAf,KAAAsM,SAAA,IAAA,EAAA","sourcesContent":["var globalData = require(\"GlobalInfo\"); \r\nconst LevelManager = require(\"LevelManager\");\r\n//State od the sleeping Cat\r\nvar CatState;\r\nCatState = cc.Enum({\r\n  FRONT: 0,\r\n  AWAKEN: 1,\r\n  BACK: 2,\r\n  SLEEP: 3,\r\n  DOWN: 4,\r\n  MINIGAME:5,\r\n});\r\n\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        catCurrentState: {\r\n            \"default\": CatState.FRONT,\r\n            type: CatState,\r\n        } ,\r\n        catTeaser:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        catMeow:[cc.AudioClip],\r\n        timerForChangeCatState:40,\r\n        checkCatchTeaser:false,\r\n        miniGameStateCounter:0,\r\n        miniGameState:0, // 0 normal 1 more frequent, 2 more fast 3 combine 2 \r\n        levelManager:LevelManager, \r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n     onLoad () {\r\n        this.catAnim = this.getComponent(cc.Animation);\r\n        this.catCatchAnimanimState = this.catAnim.getAnimationState(\"Catch\");  \r\n        this.catCatch2AnimanimState = this.catAnim.getAnimationState(\"Catch2\");  \r\n     },\r\n\r\n    start () {     \r\n        this.generateRandomCatGesture();\r\n        this.playCatVoiceAccordingToHappinessLevel(globalData.CatHappiness);\r\n       // this.schedule(function(){\r\n       //     this.generateRandomCatState();\r\n       // },40);\r\n        var imageSprite = this.node.getComponent(cc.Sprite);  \r\n        this.node.on('touchend', function (event) {\r\n            // food container\r\n            if(this.catCurrentState == CatState.FRONT ){\r\n                //Should DO something \r\n            }else if(this.catCurrentState == CatState.BACK){\r\n                // Play Cat Look Back Animation\r\n                this.catAnim.play(\"TurnBack\");\r\n            }else if(this.catCurrentState == CatState.SLEEP){\r\n                this.catAnim.play(\"WaveTail\");\r\n                // Play Cat get disturb Animation\r\n            }\r\n            // Cat should make some sound depends on its haypness and state\r\n            if(this.catCurrentState!= CatState.MINIGAME)\r\n                this.playCatVoiceAccordingToHappinessLevel(globalData.CatHappiness);\r\n      },this);\r\n    },\r\n\r\n    goToSleepState:function(){\r\n       \r\n        var imageSprite = this.node.getComponent(cc.Sprite); \r\n        if(this.catCurrentState == CatState.FRONT){\r\n            // font\r\n            this.catAnim.play(\"FontToBack\");\r\n            this.scheduleOnce(function() {\r\n                this.catAnim.play(\"WakeToSleep\");\r\n            }, 1);\r\n        }else{\r\n            // back\r\n            this.catAnim.play(\"WakeToSleep\");\r\n        }\r\n        this.catCurrentState =  CatState.SLEEP;\r\n    },\r\n\r\n    goToMiniGameState:function(){\r\n        this.catCurrentState = CatState.MINIGAME;\r\n        // check to see wheter cat is facing font, if not make it facing font\r\n        if(!this.checkIsCatHappy()){\r\n            this.catAnim.play(\"BackToFont\");\r\n        }\r\n         //Game Begins. Cat should meow once  \r\n        this.playCatVoiceAccordingToHappinessLevel(globalData.CatHappiness);       \r\n        //the cat will now try to catch the cat Teaser Triiger animations    \r\n        this.scheduleOnce(function() {\r\n            this.catAnim.play(\"Catch\");\r\n        }, 3);\r\n        this.levelManager.resetComboPoint();\r\n        //After a random set, some random events Happen , TV stats, Ball roll around, Food Smelling, Someone called\r\n        //Cat go into differnt behavior state, background changed , game harder. \r\n        //Catch in one time Wait time longer, but the animation to catch is shorter\r\n        //More Frequent\r\n        //Fake Action, then quickly cath it.\r\n\r\n        //update the combo point if the cat didn't catch the teaser\r\n    },\r\n\r\n    goToIdleState:function(){   \r\n        this.playCatVoiceAccordingToHappinessLevel(globalData.CatHappiness);\r\n        var imageSprite = this.node.getComponent(cc.Sprite);   \r\n        if(this.catCurrentState == CatState.SLEEP){\r\n            this.catAnim.play(\"SleepToWake\");\r\n            this.catCurrentState = CatState.BACK;\r\n            if(this.checkIsCatHappy()){\r\n                this.scheduleOnce(function() {\r\n                    this.catAnim.play(\"BackToFont\");\r\n                }, 1);            \r\n                this.catCurrentState = CatState.FRONT;\r\n            }\r\n            \r\n        }else{\r\n            this.generateRandomCatGesture();\r\n        }      \r\n    },\r\n\r\n    checkIsCatHappy:function(){\r\n        if(globalData.CatHappiness>=5)\r\n            return true;\r\n        else\r\n            return false;\r\n    },\r\n\r\n    generateRandomCatGesture:function(){\r\n        var imageSprite = this.node.getComponent(cc.Sprite); \r\n        var catGesture = 0;\r\n        if(this.checkIsCatHappy()){\r\n            this.catCurrentState = CatState.FRONT;\r\n            catGesture = 0;\r\n        }else{\r\n            this.catCurrentState = CatState.BACK;\r\n            catGesture = 2;\r\n        }\r\n        //Math.floor(Math.random()*4);\r\n        switch (catGesture) {\r\n            case 0:\r\n                cc.loader.loadRes(\"CatState/Front\", cc.SpriteFrame, function (err, spriteFrame) {\r\n                    imageSprite.spriteFrame  = spriteFrame;\r\n                });   \r\n                break;\r\n                \r\n            case 1:\r\n                cc.loader.loadRes(\"CatState/turn_around\", cc.SpriteFrame, function (err, spriteFrame) {\r\n                    imageSprite.spriteFrame  = spriteFrame;\r\n                });   \r\n                break;\r\n\r\n            case 2:\r\n                    cc.loader.loadRes(\"CatState/watchtv_cat\", cc.SpriteFrame, function (err, spriteFrame) {\r\n                        imageSprite.spriteFrame  = spriteFrame;\r\n                    });   \r\n                    break;    \r\n\r\n            case 3:\r\n                    cc.loader.loadRes(\"CatState/sleep_cat\", cc.SpriteFrame, function (err, spriteFrame) {\r\n                        imageSprite.spriteFrame  = spriteFrame;\r\n                    });   \r\n                    break;  \r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    playCatVoiceAccordingToHappinessLevel:function(happiness){\r\n        cc.audioEngine.stop(this.current);\r\n        // Cat is happy\r\n        if(happiness>=5){\r\n            var randValue = Math.floor(Math.random()*2);\r\n            if(randValue==0){\r\n                var randValue2 = Math.floor(Math.random()*6) +4;\r\n                this.current = cc.audioEngine.play(this.catMeow[randValue2], false, 1);\r\n            }else{\r\n                //Play Mew that is like asking questions\r\n                this.current = cc.audioEngine.play(this.catMeow[10], false, 1);\r\n            }\r\n        }else{\r\n            // up happy cat mew\r\n            var randValue = Math.floor(Math.random()*5);\r\n            this.current = cc.audioEngine.play(this.catMeow[randValue], false, 1);\r\n        }  \r\n    },\r\n    \r\n    //Get call when catch animation reach the highest\r\n    checkCatchCatTeaser:function(){\r\n        if(this.catTeaser.y>=-370&&this.catTeaser.y<=-280){//lowest postition of cat teaser\r\n            // cat teaser get caught  go back to the normal game state\r\n            this.checkCatchTeaser = false;       \r\n            //current cat animation stop\r\n            this.catAnim.stop(\"Catch\");\r\n            this.catAnim.stop(\"Catch2\");\r\n            this.catAnim.setCurrentTime(0, 'Catch2');\r\n            this.catAnim.setCurrentTime(0, 'Catch');\r\n            this.levelManager.changeGameStateToIdle();\r\n            this.levelManager.showMiniGameRewardSummary();\r\n            this.levelManager.resetComboPoint();\r\n        }\r\n        else{\r\n            this.levelManager.addComboPoint();\r\n        }\r\n    },\r\n\r\n\r\n    switchMiniGameCatAnimationState:function(){\r\n        if(this.catCurrentState == CatState.MINIGAME){\r\n            if(this.miniGameState==0){ // state 0 Normal, State 1 Move Faster, state 2 Move more Frequent, State 3 Ultimate smash\r\n                // normal state , triggger catch animation every few random time between 0 to 1.5s\r\n                var ranTimer = Math.random()*1+1; // cat catch interval between 1 to 2\r\n                this.scheduleOnce(function() {\r\n                    this.catCatchAnimanimState.speed = 0.5; \r\n                    this.catAnim.play(\"Catch\");\r\n                }, ranTimer);\r\n                console.log(\"State   0\");\r\n            }else if (this.miniGameState == 1){// Move more faster\r\n                var ranTimer = Math.random()*1+1; // cat catch interval between 1 to 2\r\n                this.catCatchAnimanimState.speed = 1; // Just Tempory, In future need to replace with animation\r\n                this.scheduleOnce(function() {\r\n                    this.catAnim.play(\"Catch\");\r\n                }, ranTimer);\r\n                console.log(\"State   1\");\r\n            }else if (this.miniGameState == 2){ // Move more Frequent\r\n                var ranTimer = Math.random()*1.5+0.5; // cat catch interval between 0.5 to 1.25\r\n                this.catCatch2AnimanimState.speed = 1; // Just Tempory, In future need to replace with animation\r\n                this.scheduleOnce(function() {\r\n                    this.catAnim.play(\"Catch2\");\r\n                }, ranTimer);\r\n                console.log(\"State   2\");\r\n            }else if (this.miniGameState == 3){// More like finish combo, sometime will appeaer alone\r\n                var ranTimer = Math.random()*2+2; // cat catch interval between 2 to 4\r\n                this.catCatch2AnimanimState.speed = 1.5; // Just Tempory, In future need to replace with animation\r\n                this.scheduleOnce(function() {\r\n                    this.catAnim.play(\"Catch2\");\r\n                }, ranTimer);\r\n                console.log(\"State   3\");\r\n            }\r\n            this.miniGameStateCounter++;\r\n        }\r\n    },\r\n\r\n    //Get call when one cat cath animation finish\r\n    switchMiniGameState:function(){\r\n        if(this.miniGameState == 0){\r\n            if(this.miniGameStateCounter>=10){\r\n                var posbility =  (this.miniGameStateCounter-10) / 10;// posiblity to swtich to harder mode\r\n                if(Math.random()<=posbility){\r\n                    // 11 is 10 percernet and if minGameCount equal 20 definitely go to switch state\r\n                //go do different minigame state 1 50 percent 2 30 percent  3 20 percent\r\n                var randomNum = Math.random();\r\n                if(randomNum<=0.5){\r\n                    this.miniGameState = 1;                   \r\n                }\r\n                else if(randomNum>=0.7){\r\n                    this.miniGameState = 2;\r\n                }\r\n                else\r\n                    this.miniGameState = 3;\r\n                this.miniGameStateCounter=0;    \r\n                }\r\n            }\r\n        }else if(this.miniGameState==1){\r\n            if(this.miniGameStateCounter>=3){\r\n                var posbility =  (this.miniGameStateCounter-3) / 3;// posiblity to swtich to mode\r\n                if(Math.random()<=posbility){\r\n                    // 11 is 10 percernet and if minGameCount equal 20 definitely go to switch state\r\n                //go do different minigame state 0 40 percent 2 40 percent  3 20 percent\r\n                var randomNum = Math.random();\r\n                if(randomNum<=0.4){\r\n                    this.miniGameState = 0;                   \r\n                }\r\n                else if(randomNum>=0.6){\r\n                    this.miniGameState = 2;\r\n                }\r\n                else\r\n                    this.miniGameState = 3;\r\n                this.miniGameStateCounter=0; \r\n                }\r\n            }\r\n        }else if(this.miniGameState==2){\r\n            if(this.miniGameStateCounter>=4){\r\n                var posbility =  (this.miniGameStateCounter-4) / 4;// posiblity to swtich to mode\r\n                if(Math.random()<=posbility){\r\n                // 6 is 33 percernet and if minGameCount equal 20 definitely go to switch state\r\n                //go do different minigame state 0 50 percent 3 40 percent  3 10 percent\r\n                var randomNum = Math.random();\r\n                if(randomNum<=0.5){\r\n                    this.miniGameState = 0;                   \r\n                }\r\n                else if(randomNum>=0.6){\r\n                    this.miniGameState = 3;\r\n                }\r\n                else\r\n                    this.miniGameState = 1;\r\n                this.miniGameStateCounter=0;    \r\n                }\r\n            }\r\n        }else if(this.miniGameState==3){\r\n            this.miniGameState = 0;\r\n            this.miniGameStateCounter = 0;\r\n        }\r\n        this.switchMiniGameCatAnimationState();\r\n    },\r\n\r\n  //  update (dt) {\r\n  //  },\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nvar globalData = require(\"GlobalInfo\"); // RuntimeData Node all global data\r\nconst LevelManager = require(\"LevelManager\");\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        dreamSprite:{\r\n            default:null,\r\n            type: cc.Node            \r\n        },\r\n        levelManager:LevelManager, \r\n        blocksGridLayout:{\r\n            default:null,\r\n            type: cc.Node            \r\n        },\r\n        \r\n        hiddenBlocks:{\r\n            default:null,\r\n            type: cc.Prefab            \r\n        },\r\n        source :\"\",\r\n        pieces:16,\r\n        keyBlocks:[],\r\n        unlockedBlocks:[],\r\n        isUnlocked:false,\r\n        hiddenDreamBlocks:[cc.Node],\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n     onLoad () {\r\n        var count =0;\r\n        for (var i = 0; i<5;i++) {\r\n            for(var j =0;j<5;j++){\r\n                var childNode = cc.instantiate(this.hiddenBlocks);                \r\n                childNode.x = childNode.width*i;\r\n                childNode.y = 1920 -childNode.height*j;\r\n                childNode.parent = this.blocksGridLayout;\r\n                var nodeControl = childNode.getComponent(\"HideDreamBlocks\");\r\n                nodeControl.parent = this.node;\r\n                nodeControl.index = count;\r\n                this.hiddenDreamBlocks[count] = childNode;\r\n                count++;\r\n            }\r\n        }\r\n     },\r\n    \r\n    start () {\r\n      \r\n    },\r\n\r\n    //Load Data from the Cat Dream\r\n    loadData:function(source){      \r\n        // update description \r\n        this.levelManager.updateDreamBoXDescription(\"点击方块查看梦境\");\r\n        var imageSprite = this.dreamSprite.getComponent(cc.Sprite);\r\n        var imgPath = \"Dream/\"+source;\r\n        this.source = source;\r\n        cc.loader.loadRes(imgPath, cc.SpriteFrame, function (err, spriteFrame) {\r\n            imageSprite.spriteFrame  = spriteFrame;\r\n        });   \r\n        // Search and load the dream object from golbal data\r\n        var collectedDreamsArrarolder = globalData.CollectedDream;\r\n        for (var index = 0; index <  globalData.CollectedDream.length; index++) {\r\n            if( globalData.CollectedDream[index].source == this.source){// find the existed source\r\n                this.unlockedBlocks =  globalData.CollectedDream[index].unlockedBlocks;\r\n            }\r\n        }\r\n        // Initiallize Hidden Block\r\n        for (var index = 0; index < this.hiddenDreamBlocks.length; index++) {\r\n            this.hiddenDreamBlocks[index].active = true;           \r\n        }\r\n        \r\n        for(var j = 0; j<this.unlockedBlocks.length;j++){\r\n            this.hiddenDreamBlocks[this.unlockedBlocks[j]].active = false;\r\n        }\r\n    },\r\n\r\n    // a hide block is unlocked called by hiddenblock\r\n    unlockHideBlocks:function(index,isKey){\r\n        // save unlockhideBlocks dream in the collective ddream list in golbal data\r\n        var collectedDreamsArrarolder = globalData.CollectedDream;\r\n        console.log(\"Points + \"+globalData.ActionPoints);\r\n        if(globalData.ActionPoints>0){\r\n            // if there is enough action points tp unlock dream, unlock it \r\n            globalData.ActionPoints--;\r\n            // tell levelmanager to update all actioon points\r\n            this.levelManager.updateActionPoint();\r\n            this.hiddenDreamBlocks[index].active = false;\r\n            for (var i = 0; i < collectedDreamsArrarolder.length; i++) {\r\n                if(collectedDreamsArrarolder[i].source == this.source){// find the existed source\r\n                    // up date the unlockedBlocks'Index\r\n                    // change the golbal data here\r\n                    globalData.CollectedDream[i].unlockedBlocks.push(index);\r\n                    // find and math all the key piece\r\n                    var keyPieceIndex = collectedDreamsArrarolder[i].keyBlocks.indexOf(index);\r\n                    // find the index in the keypieces\r\n                    if(keyPieceIndex>-1){\r\n                        // remove it from the golbal data\r\n                        globalData.CollectedDream[i].keyBlocks.splice(keyPieceIndex,1);\r\n                    }\r\n                    // unluck all the hidden pieces\r\n                    if(globalData.CollectedDream[i].keyBlocks.length<=0){\r\n                        // if unlock all hidden pieces Clear all the pieces\r\n                        globalData.CollectedDream[i].isUnLocked = true;\r\n                        for( var j = 0; j<this.hiddenDreamBlocks.length;j++){\r\n                            globalData.CollectedDream[i].unlockedBlocks.push(j);\r\n                            this.hiddenDreamBlocks[j].active = false;\r\n                        }\r\n                        this.levelManager.updateDreamBoXDescription(\"恭喜解锁新梦境\");\r\n                    }else if(globalData.CollectedDream[i].unlockedBlocks.length>=globalData.CollectedDream[i].pieces){\r\n                        globalData.CollectedDream[i].isUnLocked = true;\r\n                        this.levelManager.updateDreamBoXDescription(\"恭喜解锁新梦境\");\r\n                    }\r\n                }  \r\n            }\r\n        }else{// \r\n            console.log(\"Not Enough Points\");\r\n        }\r\n        this.levelManager.saveGolbalData();       \r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        catTeaser:{\r\n            default: null,\r\n            type:cc.Node,\r\n        },\r\n        catchedTimes:0,\r\n        canPulledOut:false,\r\n        isCatched:false,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        this.catAnim = this.catTeaser.getComponent(cc.Animation);\r\n    \r\n        this.node.on('touchend', function (event) {\r\n           // On Taps the teaser go up, play different animation depends whether the teaser get catched\r\n           if(!this.isCatched){\r\n            this.catAnim.play(\"Pullup\")\r\n           }else{\r\n             //If cat catch the teaser in normal state, and can tap teaser in 5 times in a sec to pull out the teaser\r\n           // more times to get catched, more times you need to tap\r\n                if(!this.canPulledOut){\r\n                    this.catAnim.play(\"Struggle\");\r\n                }\r\n                //If the tesaer get heavily dmg\r\n                //Teaser cannot get pull out \r\n                //this.catAnim.play(\"Pullup\");\r\n           }\r\n      },this);\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        value:0,\r\n        canvas:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad () {\r\n        this.levelManagerControl = this.canvas.getComponent(\"LevelManager\");\r\n    },\r\n\r\n    start () {\r\n        this.node.on('touchend', function (event) {\r\n            this.levelManagerControl.collectObjects(this.value);\r\n            this.node.active = false;\r\n        },this);\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        source:\"default\",\r\n        pieces:0,\r\n        keyBlocks:[],\r\n        unlockedBlocks:[],\r\n        isUnlocked:false,\r\n        imgNode:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        imgMask:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        catDreamPopup:{\r\n            default:null,\r\n            type:cc.Node\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        this.imgPath = \"Dream/\"+this.source;\r\n        console.log(\"Dream\"+this.imgPath +\"  IsUnLocked \"+this.isUnlocked);\r\n        this.imgMask.active = !this.isUnlocked;\r\n        var imageSprite = this.imgNode.getComponent(cc.Sprite);\r\n        this.dreamPopUpControl = this.catDreamPopup.getComponent(\"CatDreamPopup\");\r\n        cc.loader.loadRes(this.imgPath, cc.SpriteFrame, function (err, spriteFrame) {\r\n            imageSprite.spriteFrame = spriteFrame;\r\n        });   \r\n        this.node.on('touchend', function (event) {\r\n            this.openCatDreamPopup();\r\n        },this);     \r\n    },\r\n\r\n    openCatDreamPopup:function(){\r\n        this.catDreamPopup.active = true;        \r\n        this.dreamPopUpControl.loadData(this.source);\r\n    }\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        bowlType:0, // 0 is food 1 is water\r\n        bowlState:0,\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n        \r\n        var foodEmpty,waterEmpty,foodFull,waterFull;\r\n        var imageSprite = this.node.getComponent(cc.Sprite);  \r\n\r\n        this.node.on('touchend', function (event) {\r\n                // food container\r\n                if(this.bowlState == 0 ){\r\n                    if(this.bowlType == 0){\r\n                        cc.loader.loadRes(\"InteractiveObjecs/full_food_bowl\", cc.SpriteFrame, function (err, spriteFrame) {\r\n                            imageSprite.spriteFrame  = spriteFrame;\r\n                        });   \r\n                    }\r\n                    else if(this.bowlType ==1){\r\n                        cc.loader.loadRes(\"InteractiveObjecs/full_water_bowl\", cc.SpriteFrame, function (err, spriteFrame) {\r\n                            imageSprite.spriteFrame  = spriteFrame;\r\n                        });   \r\n                    }\r\n                    this.bowlState =1;\r\n                }\r\n                else if(this.bowlState == 1 ){\r\n                        if(this.bowlType == 0){\r\n                            cc.loader.loadRes(\"InteractiveObjecs/empty_food_bowl\", cc.SpriteFrame, function (err, spriteFrame) {\r\n                                imageSprite.spriteFrame  = spriteFrame;\r\n                            });   \r\n                        }\r\n                        else if(this.bowlType ==1){\r\n                            cc.loader.loadRes(\"InteractiveObjecs/empty_water_bowl\", cc.SpriteFrame, function (err, spriteFrame) {\r\n                                imageSprite.spriteFrame  = spriteFrame;\r\n                            });   \r\n                        }\r\n                    this.bowlState =0;\r\n                }\r\n          },this);\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Enable Physci System\r\ncc.director.getPhysicsManager().enabled = true;\r\n//Enable Physics Drawing systme\r\n//cc.director.getPhysicsManager().debugDrawFlags = cc.PhysicsManager.DrawBits.e_aabbBit |\r\n //   cc.PhysicsManager.DrawBits.e_pairBit |\r\n  //  cc.PhysicsManager.DrawBits.e_centerOfMassBit |\r\n   // cc.PhysicsManager.DrawBits.e_jointBit |\r\n   // cc.PhysicsManager.DrawBits.e_shapeBit\r\n   // ;\r\nmodule.exports =\r\n{\r\n    UserName:null,\r\n    NicknName:null,\r\n    AvatarURL:null,\r\n    StoredBackedTime:0,\r\n    StoredEatingTime:0,\r\n    StoredDrinkingingTime:0,\r\n    StoredPlayingTime:0,\r\n    StoredWatchingTime:0,\r\n    ActionPoints:0,\r\n    CatHappiness : 6,\r\n    CatHappinessGoUp:false,\r\n    CollectedDream:[],\r\n};\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        index:0,\r\n        parent:{\r\n            default:null,\r\n            type: cc.Node,  \r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    start () {\r\n        this.node.on('touchend', function (event) {\r\n          // this.parent.getComponent(\"CatDreamPopup\").UpdateHideBlocks();\r\n        if(this.node.active == true){\r\n            this.parent.getComponent(\"CatDreamPopup\").unlockHideBlocks(this.index,this.index);\r\n        }\r\n\r\n        },this);\r\n    },\r\n\r\n});\r\n","var globalData = require(\"GlobalInfo\"); // RuntimeData Node all global data\r\nvar GameState;\r\nGameState = cc.Enum({\r\n  IDLE: 0,\r\n  GO_OUT: 1,\r\n  SLEEP: 2,\r\n  MINIGAME:3,\r\n});\r\n\r\n\r\n//Define Dream Constructor\r\nfunction CatDream(source,pieces,keyBlocks,unlockedBlocks,isUnLocked){\r\n    this.source = source;\r\n    this.pieces = pieces\r\n    this.keyBlocks = keyBlocks;\r\n    this.unlockedBlocks = unlockedBlocks;\r\n    this.isUnLocked = isUnLocked;\r\n}\r\n\r\n// Declare all the possible dreams\r\nvar dreamBeach = new CatDream(\"Beach\",25,[4,5,6,7,8],[],false); \r\nvar dreamBatMan = new CatDream(\"Batman\",25,[4,5,6,7,8],[],false); \r\nvar dreamBlackCat = new CatDream(\"BlackCat\",25,[4,5,6,7,8],[],false); \r\nvar dreamCatFish = new CatDream(\"CatFish\",25,[4,5,6,7,8],[],false); \r\nvar dreamCloudCat = new CatDream(\"CloudCat\",25,[4,5,6,7,8],[],false); \r\nvar dreamDogCat = new CatDream(\"Dogcat\",25,[4,5,6,7,8],[],false); \r\nvar dreamFox = new CatDream(\"Fox\",25,[4,5,6,7,8],[],false); \r\nvar dreamMerimaid = new CatDream(\"Merimaid\",25,[4,5,6,7,8],[],false); \r\nvar dreamSpace = new CatDream(\"Space\",25,[4,5,6,7,8],[],false);\r\nvar dreamTiger = new CatDream(\"TIger\",25,[4,5,6,7,8],[],false);\r\nvar totalDream = [dreamBeach,dreamBatMan,dreamBlackCat,dreamCatFish,dreamCloudCat,dreamDogCat,dreamFox,dreamMerimaid,dreamSpace,dreamTiger];\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        cat:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        countDownTime:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        goOutUI:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        goOutBtn:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        sleepBtn:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        miniGameBtn:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        collectiveDreamBubble:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        collectiveObject:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        //DreamBox Componnet\r\n        catDreamBoxUI:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        combosLabelNode:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        miniGameScorePopupUI:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        minGameRewardedActionPointLabel:{\r\n            default:null,\r\n            type:cc.Label\r\n        },\r\n        combosLabel:{\r\n            default:null,\r\n            type:cc.Label\r\n        },\r\n        actionPointLabel:{\r\n            default:null,\r\n            type:cc.Label\r\n        },\r\n        descriptionDreamBoxLabel:{\r\n            default:null,\r\n            type:cc.Label\r\n        },\r\n        // Hidden Dream in the dream box\r\n        hiddenDream: {\r\n            default: null,\r\n            type: cc.Prefab,\r\n          },\r\n        catDreamBoxGridLayout:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        // The popup dream to show the big dream with hidden blocks\r\n        catDreamPopup:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n        sunMoonWheel:{\r\n            default:null,\r\n            type:cc.Node\r\n        },\r\n         // game Current state  \r\n        currentState:{\r\n            \"default\": GameState.IDLE,\r\n            type: GameState,         \r\n        },\r\n        tapArea:{\r\n            default:null,\r\n            type:cc.Node,\r\n        },\r\n        catTeaser:{\r\n            default:null,\r\n            type:cc.Node,\r\n        },\r\n        playerWaitingTime:10,\r\n        // determinate Wheter cat is happy or not\r\n        catHappiness:0,\r\n        userData:null,\r\n        comboCount:0,\r\n    },\r\n\r\n\r\n    //Game Circle funcs\r\n    onLoad () {\r\n       // this.loadGolbalData();\r\n        \r\n        this.catControl = this.cat.getComponent(\"CatControl\");\r\n        // load saved data to golbal\r\n        //Load golbal Data\r\n        //this.goldLabel.string = \"Gold : \"+globalData.Gold;\r\n        this.loadGolbalData();\r\n    },\r\n\r\n    start () {       \r\n        this.timeCountDownLabel = this.countDownTime.getComponent(cc.Label);\r\n        this.goOutUI.active = false;\r\n        this.countDownTime.active = false;\r\n        this.catDreamPopup.active = false;\r\n        this.catDreamBoxUI.active = false;\r\n        this.collectiveObject.active = false;\r\n        this.collectiveDreamBubble.active = false;\r\n        this.tapArea.active = false;\r\n        this.catTeaser.active = false;\r\n        this.combosLabel.string = \"\";\r\n        this.combosLabelNode.active = false;\r\n        this.miniGameScorePopupUI.active = false;\r\n        // hold the catDream obj for catdream generation;\r\n        this.generatedDream = null;\r\n        // Time WHeel update Every 4 minius which is one degree\r\n        this.updateTimeWheelAccordingToRealTime();\r\n        this.schedule(function(){\r\n            this.updateTimeWheelAccordingToRealTime();\r\n        },240);\r\n\r\n        //updatae the cat happiness every hour 10 is superhappy  larger or eual than 5 is happy smaller than 4 is up happy\r\n        this.schedule(function(){\r\n            if(globalData.CatHappiness==10){\r\n               globalData.CatHappinessGoUp = false;\r\n            }else if(tglobalData.CatHappiness==0){\r\n               // globalData.CatHappinessGoUp = true;\r\n            }\r\n            if(globalData.CatHappinessGoUp){\r\n                if(globalData.CatHappiness<10){\r\n                    globalData.CatHappiness++;\r\n                } \r\n            }\r\n            else{\r\n                if(globalData.CatHappiness>0){\r\n                    globalData.CatHappiness--;\r\n                } \r\n            }\r\n\r\n        },3600);\r\n\r\n    },\r\n\r\n    saveGolbalData:function(){\r\n        if(false){\r\n            this.userData = globalData;\r\n            wx.setStorageSync(\"gameData\", this.userData);\r\n            console.log(\"Data get Saved\");\r\n        }       \r\n\r\n    },\r\n\r\n    loadGolbalData:function(){\r\n    //    this.userData = JSON.parse(cc.sys.localStorage.getItem('userData'));\r\n     //   if(this.userData==null){\r\n     //       this.userData = globalData;\r\n     //       cc.sys.localStorage.setItem('userData', JSON.stringify(this.userData));\r\n    //        this.userData = JSON.parse(cc.sys.localStorage.getItem('userData'));\r\n    //    }\r\n    if(false){\r\n        var res = wx.getStorageInfoSync()\r\n        console.log(res.keys)\r\n        console.log(res.currentSize)\r\n        console.log(res.limitSize)\r\n        res.keys.forEach(element => {\r\n            if(element==\"gameData\"){\r\n                this.userData = wx.getStorageSync('gameData');\r\n                console.log(\" the saved data\"+this.userData);\r\n                globalData.NickName = this.userData.NickName;\r\n                globalData.ActionPoints = this.userData.ActionPoints;\r\n              //  globalData.CatHappiness = this.userData.CatHappiness;\r\n                globalData.CollectedDream = this.userData.CollectedDream;\r\n                globalData = this.userData;\r\n                this.actionPointLabel.string = globalData.ActionPoints;\r\n                console.log(\"load Golbal Data\"+ globalData);\r\n            }else{\r\n                this.saveGolbalData();\r\n                console.log(\"Cannot find and local create one first\");\r\n            }\r\n        });\r\n  \r\n        console.log(\"load Data\");\r\n    }\r\n    },\r\n\r\n    changeGameStateToSleep:function(){\r\n       // this.autoCollectObjectsAndDream();\r\n       // if cat is happy cat listen to the order, and go to sleep\r\n       // if cat is not happy, depends on the degree, cat may gou out depend on a chance, and every time the onwer \r\n       //order the less chance the cat will go out. The minimu chance is 5 percent;\r\n       // if the ranVaule is less than 1 which means the less happier the cat the less chance the cat will go out\r\n       var randValue = Math.floor(Math.random()*(10-globalData.CatHappiness));\r\n       if(globalData.CatHappiness==0){ // super sad, Not going to listen to any order\r\n        randValue =10;\r\n       }\r\n       if(globalData.CatHappiness>=5||randValue<=1){\r\n        this.currentState = GameState.SLEEP;\r\n        this.cat.active = true;\r\n        this.catControl.goToSleepState();\r\n        this.startCountDown(this.playerWaitingTime*4);\r\n       }else{\r\n        if(globalData.CatHappiness>0){\r\n            globalData.CatHappiness--;\r\n        } \r\n        console.log(\"I am not happy\");\r\n       }\r\n       this.catControl.playCatVoiceAccordingToHappinessLevel(globalData.CatHappiness);\r\n    },\r\n\r\n    changeGameStateToGoOut:function(){      \r\n        //the logic here should be similar to the Cat to Sleep\r\n        var randValue = Math.floor(Math.random()*(10-globalData.CatHappiness));\r\n        if(globalData.CatHappiness==0){ // super sad, Not going to listen to any order\r\n            randValue =10;\r\n           }\r\n        if(globalData.CatHappiness>=5||randValue<=1){\r\n            this.goOutUI.active = true;\r\n            this.currentState = GameState.GO_OUT;\r\n            this.cat.active = false;\r\n            this.startCountDown(this.playerWaitingTime); // 0.1 mins\r\n        }else{\r\n             //TODO cat is even less hapier than usual , make some annoyed sounds  \r\n            if(globalData.CatHappiness>0){\r\n                globalData.CatHappiness--;\r\n            } \r\n            console.log(\"I am not happy\");\r\n        }\r\n        this.catControl.playCatVoiceAccordingToHappinessLevel(globalData.CatHappiness);\r\n    },\r\n\r\n    changeGameStateToMiniGame:function(){\r\n        this.miniGameBtn.active = false;\r\n        this.goOutBtn.active = false;\r\n        this.sleepBtn.active = false;\r\n        this.tapArea.active = true;\r\n        this.catTeaser.active = true;\r\n        this.combosLabel.string = \"\";\r\n        this.combosLabelNode.active = true;\r\n        this.cat.active = true;\r\n        this.currentState = GameState.MINIGAME;\r\n        this.catControl.goToMiniGameState();\r\n    },\r\n\r\n    // Game go back to Idle state and Generate a Dream from the list\r\n    changeGameStateToIdle:function(){\r\n        if(this.currentState == GameState.SLEEP){\r\n            this.collectiveDreamBubble.active = true;\r\n            this.generateRandomDream();\r\n        }else if(this.currentState == GameState.GO_OUT){\r\n            this.collectiveObject.active = true;\r\n        }else if(this.currentState == GameState.MINIGAME){\r\n            this.onMIniGameFinished();\r\n        }\r\n        this.currentState = GameState.IDLE;\r\n        this.cat.active = true;\r\n        this.tapArea.active = false;\r\n        this.catTeaser.active = false;\r\n        this.countDownTime.active = false;\r\n        this.goOutUI.active = false;\r\n        this.combosLabel.string = \"\";\r\n        this.combosLabelNode.active = false;\r\n        this.miniGameBtn.active = true;\r\n        this.goOutBtn.active = true;\r\n        this.sleepBtn.active = true;\r\n        this.catControl.goToIdleState();\r\n    },\r\n\r\n    //auto collect things if  player didn't mannually collect it\r\n    autoCollectObjectsAndDream:function(){\r\n        if(this.collectiveDreamBubble.active){\r\n            collectiveDreamBubble.active = false;\r\n            this.collectObjects(0);\r\n        }\r\n        if(this.collectiveObject.active){\r\n            collectiveObject.active = false;\r\n            this.collectObjects(1);\r\n        }\r\n    },\r\n\r\n    //Generate a RadomDream and Return it\r\n    generateRandomDream:function(){\r\n        //totalDream[0].source\r\n     this.generatedDream = totalDream[Math.floor(Math.random()*totalDream.length)];\r\n     //console.log(this.generatedDream.source);\r\n    },\r\n\r\n    // collect objects to unlock dream or action point\r\n    collectObjects:function(type){\r\n    //0 Dream >0 Objects that can trade for action points\r\n        switch (type) {\r\n            case 0: // DREAM\r\n                var bFindexisted = false;\r\n                var collectedDreamsArrarolder = globalData.CollectedDream;\r\n                // find whether the dream is existed in golbaldata is existed then change it to action points\r\n                for (var index = 0; index < collectedDreamsArrarolder.length; index++) {\r\n                    if(collectedDreamsArrarolder[index].source == this.generatedDream.source){// find the existed source\r\n                        // action point plus 3\r\n                        globalData.ActionPoints+=3;\r\n                        bFindexisted = true;\r\n                    }\r\n                }\r\n                // save the dream to the golbal data \r\n                if(!bFindexisted)\r\n                globalData.CollectedDream.push(this.generatedDream);\r\n                //console.log(this.generatedDream.source);\r\n                break;\r\n            case 1: // Reward Action Point\r\n                // add the action point or Trigger the mini game\r\n                globalData.ActionPoints+=type;               \r\n                break;\r\n            default:\r\n                globalData.ActionPoints+=type;\r\n                break;\r\n        }\r\n        this.saveGolbalData();\r\n    },\r\n    //load All the dream\r\n    loadAllDreamsFromGolbalData:function(){\r\n        // up date score;\r\n        this.actionPointLabel.string = globalData.ActionPoints;\r\n        // destroy all node from this parent node\r\n        this.catDreamBoxGridLayout.removeAllChildren();\r\n        //re instiate accroding to what inside the collected dream\r\n        globalData.CollectedDream.forEach(dream => {\r\n             //Instiantate a random hidden Cat dream, and add it into dream panel\r\n        var node = cc.instantiate(this.hiddenDream);\r\n        var catHiddenDreamCOntrol = node.getComponent(\"Dreams\");\r\n        catHiddenDreamCOntrol.source = dream.source;\r\n        catHiddenDreamCOntrol.pieces =dream.pieces;\r\n        catHiddenDreamCOntrol.keyBlocks = dream.keyBlocks;\r\n        catHiddenDreamCOntrol.isUnlocked = dream.isUnLocked;\r\n        catHiddenDreamCOntrol.unlockedBlocks =dream.unlockedBlocks\r\n        // passing dream popup\r\n        catHiddenDreamCOntrol.catDreamPopup = this.catDreamPopup;\r\n        node.parent = this.catDreamBoxGridLayout;\r\n        });  \r\n        console.log(\"ReLoad All Dream\"); \r\n        this.updateDreamBoXDescription(\"点击方块解锁梦境\");\r\n    },\r\n    //update the UI for the action point and save it \r\n    updateActionPoint:function(){\r\n        this.actionPointLabel.string = globalData.ActionPoints;\r\n        this.saveGolbalData(); \r\n    },\r\n\r\n    //show summary after player play minigame\r\n    showMiniGameRewardSummary:function(){\r\n        var rewardedActionPoint = Math.floor(this.comboCount/15);\r\n        var countToNextPoint = 15-this.comboCount%15;   \r\n        this.miniGameScorePopupUI.active = true;\r\n        this.minGameRewardedActionPointLabel.string = \"You Score is \"+ this.comboCount + \" You Earn \"+rewardedActionPoint + \" to unlock dreams ! \" +countToNextPoint+\" more to get next action point\";\r\n        globalData.ActionPoints += rewardedActionPoint;\r\n        this.updateActionPoint();\r\n    },\r\n\r\n    // the ok button get cliceked\r\n    hideGameRewardSummary:function(){\r\n        this.miniGameScorePopupUI.active = false;\r\n    },\r\n\r\n    updateDreamBoXDescription:function(value){\r\n        this.descriptionDreamBoxLabel.string = value;\r\n    },\r\n\r\n    addComboPoint:function(){\r\n        this.comboCount++;\r\n        this.combosLabel.string = \"Combos \"+this.comboCount;\r\n    },\r\n\r\n    resetComboPoint:function(){\r\n        this.comboCount=0;\r\n        this.combosLabel.string = \"Combos \"+this.comboCount;\r\n    },\r\n\r\n    getComboCount:function(){\r\n        return this.comboCount;\r\n    },\r\n\r\n    openCatDreamBoxUI:function(){\r\n        this.loadAllDreamsFromGolbalData();\r\n        this.catDreamBoxUI.active = true;\r\n    },\r\n\r\n    closeCatDreamBoxUI:function(){\r\n        this.catDreamBoxUI.active = false;\r\n    },\r\n\r\n    closeDreamPopUp:function(){\r\n        this.loadAllDreamsFromGolbalData();\r\n        this.catDreamPopup.active = false;\r\n    },\r\n\r\n    onMIniGameFinished:function(){\r\n            // adding the action points\r\n            //cat become more happier if the score is better than some threshold\r\n            globalData.CatHappiness++;\r\n    },\r\n\r\n    updateTimeWheelAccordingToRealTime:function(){\r\n        var data = new Date();\r\n        var hours =  data.getHours() + data.getMinutes()/60;  \r\n        var degree = -(hours)*15;\r\n        this.sunMoonWheel.rotation = degree;\r\n    },\r\n\r\n    // Start count down\r\n    startCountDown:function(timeLength){\r\n        this.countDownTime.active = true;\r\n        this.goOutBtn.active = false;\r\n        this.sleepBtn.active = false;\r\n        this.miniGameBtn.active = false;\r\n        this.tapArea.active = false;\r\n        this.catTeaser.active = false;\r\n        this.combosLabel.string = \"\";\r\n        this.combosLabelNode.active = false;\r\n        //获取当前时间戳  \r\n        var timestamp = Date.parse(new Date());  \r\n        console.log(\"Time \"+timestamp);\r\n        timestamp = timestamp / 1000;  \r\n        //获取当前时间  \r\n        var n = timestamp * 1000;   \r\n        var futureTimeStampCatBack = n+ timeLength*60*1000   \r\n        globalData.StoredTime = futureTimeStampCatBack;\r\n        this.callback = function () {          \r\n            // Get todays date and time\r\n            var now = new Date().getTime();\r\n            var durationForCatbackTimeStamp = futureTimeStampCatBack-now;\r\n            var hours = Math.floor(durationForCatbackTimeStamp / (1000 * 60 * 60));\r\n            var minutes = Math.floor((durationForCatbackTimeStamp % (1000 * 60 * 60)) / (1000 * 60));\r\n            var seconds = Math.floor((durationForCatbackTimeStamp % (1000 * 60)) / 1000);\r\n            this.timeCountDownLabel.string =  hours +\"h \"+minutes+\"m\"+ seconds+\"s\";\r\n          \r\n            if (durationForCatbackTimeStamp<=1000) {                \r\n                //Stop the Call Back\r\n                // back to idle state \r\n                this.changeGameStateToIdle();\r\n                this.unschedule(this.callback);\r\n            }\r\n        }\r\n        this.schedule(this.callback,1);       \r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","var globalData = require(\"GlobalInfo\"); // RuntimeData Node all global data\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    gameStart:function(){\r\n        this.getUserInfo();    \r\n    },\r\n\r\n    //write data to Golbval obj\r\n    getUserInfo:function(){\r\n        if(false){\r\n            wx.getUserInfo({\r\n                success: function(res) {\r\n                    var userInfo = res.userInfo;\r\n                    globalData.NickName = userInfo.nickName;\r\n                    globalData.AvatarURL = userInfo.avatarUrl;\r\n                    var gender = userInfo.gender //性别 0：未知、1：男、2：女\r\n                    var province = userInfo.province\r\n                    var city = userInfo.city\r\n                    var country = userInfo.country\r\n                    console.log(\" userInfo : \" + globalData.UserName +\"  name:\"+ globalData.NickName +\"avatarUrl:  \"+globalData.AvatarURL);\r\n                    cc.director.loadScene('Main'); \r\n                }\r\n            })\r\n        }\r\n    },\r\n\r\n\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        UISounds:[cc.AudioClip],\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    onBtnClicked:function(){\r\n        this.current = cc.audioEngine.play(this.UISounds[0], false, 1);\r\n    }\r\n    // update (dt) {},\r\n});\r\n"],"sourceRoot":"/source/","file":"project.js"}